// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyApp.Server.Data;

#nullable disable

namespace MyApp.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MyApp.Server.Models.Dacha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IsAvailable")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Rate")
                        .HasColumnType("double");

                    b.Property<int>("Sqft")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Dachas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenity = "Wi-Fi, Pool, Sauna",
                            CreatedDate = new DateTime(2025, 7, 14, 20, 29, 52, 3, DateTimeKind.Local).AddTicks(7624),
                            Details = "A beautiful villa with a sunset view.",
                            ImageURL = "",
                            IsAvailable = "No",
                            Name = "Sunset Villa",
                            Rate = 7.5,
                            Sqft = 2000,
                            UpdatedDate = new DateTime(2025, 7, 14, 20, 29, 52, 3, DateTimeKind.Local).AddTicks(7635)
                        },
                        new
                        {
                            Id = 2,
                            Amenity = "Wi-Fi, Fireplace, Hiking Trails",
                            CreatedDate = new DateTime(2025, 7, 14, 20, 29, 52, 3, DateTimeKind.Local).AddTicks(7637),
                            Details = "Cozy retreat in the mountains.",
                            ImageURL = "",
                            IsAvailable = "Yes",
                            Name = "Mountain Retreat",
                            Rate = 6.2000000000000002,
                            Sqft = 1800,
                            UpdatedDate = new DateTime(2025, 7, 14, 20, 29, 52, 3, DateTimeKind.Local).AddTicks(7638)
                        },
                        new
                        {
                            Id = 3,
                            Amenity = "Wi-Fi, Boat Dock, BBQ",
                            CreatedDate = new DateTime(2025, 7, 14, 20, 29, 52, 3, DateTimeKind.Local).AddTicks(7639),
                            Details = "Relaxing house by the lake.",
                            ImageURL = "",
                            IsAvailable = "Yes",
                            Name = "Lake House",
                            Rate = 8.0,
                            Sqft = 2200,
                            UpdatedDate = new DateTime(2025, 7, 14, 20, 29, 52, 3, DateTimeKind.Local).AddTicks(7640)
                        },
                        new
                        {
                            Id = 4,
                            Amenity = "Fireplace, Hiking Trails, Pet Friendly",
                            CreatedDate = new DateTime(2025, 7, 14, 20, 29, 52, 3, DateTimeKind.Local).AddTicks(7641),
                            Details = "Secluded cabin in the forest.",
                            ImageURL = "",
                            IsAvailable = "No",
                            Name = "Forest Cabin",
                            Rate = 4.5,
                            Sqft = 1200,
                            UpdatedDate = new DateTime(2025, 7, 14, 20, 29, 52, 3, DateTimeKind.Local).AddTicks(7641)
                        },
                        new
                        {
                            Id = 5,
                            Amenity = "Wi-Fi, Rooftop Access, Gym",
                            CreatedDate = new DateTime(2025, 7, 14, 20, 29, 52, 3, DateTimeKind.Local).AddTicks(7643),
                            Details = "Modern loft in the city center.",
                            ImageURL = "",
                            IsAvailable = "Yes",
                            Name = "City Loft",
                            Rate = 9.0,
                            Sqft = 950,
                            UpdatedDate = new DateTime(2025, 7, 14, 20, 29, 52, 3, DateTimeKind.Local).AddTicks(7643)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
